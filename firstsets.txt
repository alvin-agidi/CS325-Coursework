    // Program::firstSet = TokenSet({EXTERN, VOID_TOK, INT_TOK, FLOAT_TOK, BOOL_TOK});
    ExternList::firstSet = std::make_unique<FirstSet>({EXTERN});
    Declaration::firstSet = TokenSet({VOID_TOK, INT_TOK, FLOAT_TOK, BOOL_TOK});
    DeclarationList::firstSet = TokenSet({VOID_TOK, INT_TOK, FLOAT_TOK, BOOL_TOK});
    Params::firstSet = TokenSet({VOID_TOK, INT_TOK, FLOAT_TOK, BOOL_TOK});
    ParamList::firstSet = TokenSet({COMMA});
    Param::firstSet = TokenSet({VOID_TOK, INT_TOK, FLOAT_TOK, BOOL_TOK});
    IdentBody::firstSet = TokenSet({LPAR});
    // type_spec::firstSet = TokenSet({VOID_TOK, INT_TOK, FLOAT_TOK, BOOL_TOK});
    LocalDeclarationList::firstSet = TokenSet({INT_TOK, FLOAT_TOK, BOOL_TOK});
    LocalDeclaration::firstSet = TokenSet({INT_TOK, FLOAT_TOK, BOOL_TOK});
    StatementList::firstSet = TokenSet({IDENT, MINUS, NOT, LPAR, INT_LIT, FLOAT_LIT, BOOL_LIT, SC, LBRA, IF, WHILE, RETURN});
    Statement::firstSet = TokenSet({IDENT, MINUS, NOT, LPAR, INT_LIT, FLOAT_LIT, BOOL_LIT, SC, LBRA, IF, WHILE, RETURN});
    ExpressionStatement::firstSet = TokenSet({IDENT, MINUS, NOT, LPAR, INT_LIT, FLOAT_LIT, BOOL_LIT, SC});
    Expression::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval1::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval1List::firstSet = TokenSet({OR});
    Rval2::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval2List::firstSet = TokenSet({AND});
    Rval3::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval3List::firstSet = TokenSet({EQ, NE});
    Rval4::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval4List::firstSet = TokenSet({LT, LE, GT, GE});
    Rval5::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval5List::firstSet = TokenSet({PLUS, MINUS});
    Rval6::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Rval6List::firstSet = TokenSet({ASTERIX, DIV, MOD});
    RvalTerm::firstSet = TokenSet({IDENT, MINUS, NOT, LPAR, INT_LIT, FLOAT_LIT, BOOL_LIT});
    Args::firstSet = TokenSet({MINUS, NOT, LPAR, IDENT, INT_LIT, FLOAT_LIT, BOOL_LIT});
    ArgList::firstSet = TokenSet({COMMA});
    FunctionBody::firstSet = TokenSet({LPAR});
    Block::firstSet = TokenSet({LBRA});
    WhileStatement::firstSet = TokenSet({WHILE});
    IfStatement::firstSet = TokenSet({IF});
    ElseStatement::firstSet = TokenSet({ELSE});
    ReturnStatement::firstSet = TokenSet({RETURN});